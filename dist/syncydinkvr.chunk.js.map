{"version":3,"sources":["webpack:///./src/components/AframeVideoPlayer/AframeVideoPlayer.vue?411b","webpack:///./src/components/AframeVideoPlayer/AframeVideoPlayer.ts","webpack:///./src/components/AframeVideoPlayer/AframeVideoPlayer.ts?dd60","webpack:///./src/components/AframeVideoPlayer/AframeVideoPlayer.vue"],"names":["asc","__webpack_require__","AframeVideoPlayervue_type_script_lang_ts_AframeVideoPlayer","AframeVideoPlayer","vue_runtime_esm","[object Object]","this","vrControlButton","videoElementId","AFRAME","components","hasOwnProperty","registerComponent","stereo_component","stereocam_component","Button","video_cjs_default","a","getComponent","OnVRClick","RunVRMode","VRButton","extend","constructor","apply","arguments","controlText","handleClick","currentPlayer","OnCurrentPlayerChange","getChild","addChild","id","text","el","innerHTML","videoElement","querySelector","console","log","removeChild","scene","document","camera","createElement","setAttribute","eye","appendChild","leftEye","primitive","radius","segmentsHeight","segmentsWidth","shader","npot","side","src","mode","rightEye","enterVR","__decorate","Object","vue_property_decorator","default","AframeVideoPlayer_AframeVideoPlayervue_type_script_lang_ts_","component","componentNormalizer","_h","$createElement","_self","_c","attrs","embedded","vr-mode-ui","__webpack_exports__"],"mappings":"iGAAA,keCIA,MAAMA,EAAMC,EAAQ,KAIpB,IAAqBC,EAArB,MAAqBC,0BAA0BC,EAAA,QAA/CC,kCAGUC,KAAAC,gBAA4C,KAC5CD,KAAAE,eAAgC,KAEjCH,UACAI,OAAOC,WAAWC,eAAe,YACpCF,OAAOG,kBAAkB,SAAUZ,EAAIa,kBACvCJ,OAAOG,kBAAkB,YAAaZ,EAAIc,sBAE5C,MAAMC,EAASC,EAAAC,EAAQC,aAAa,UAC9BC,EAAY,KAChBb,KAAKc,aAEDC,EAAYL,EAAAC,EAAgBK,OAAON,EAAAC,EAAQC,aAAa,UAAW,CAEvEK,YAAa,WACVR,EAAeS,MAAMlB,KAAMmB,WAC5BnB,KAAKoB,YAAY,OAGnBC,YAAa,WACXR,OAIJH,EAAAC,EAAQL,kBAAkB,WAAYS,GAClCf,KAAKsB,eACPtB,KAAKuB,wBAKFxB,wBACLC,KAAKC,gBACHD,KAAKsB,cACJE,SAAS,cACTC,SAAS,WAAY,CAAEC,GAAI,mBAAoBC,KAAM,MAAQ,IAChE3B,KAAKC,gBAAgB2B,KAAKC,UAAY7B,KAAKC,gBAAgB2B,KAAKC,UAAY,YAE5E,MAAMC,EAAe9B,KAAKsB,cAAeM,KAAKG,cAAc,SACxDD,QAIJ9B,KAAKE,eAAiB4B,EAAaJ,GAHjCM,QAAQC,IAAI,8CAMTlC,gBACLC,KAAKsB,cAAeE,SAAS,cAAeU,YAAYlC,KAAKC,iBAC7DD,KAAKC,gBAAkB,KAGjBF,YACN,MAAMoC,EAAQC,SAASL,cAAc,WAC/BM,EAASD,SAASE,cAAc,YAKtCD,EAAOE,aAAa,WAAY,UAChCF,EAAOE,aAAa,YAAa,CAAEC,IAAK,SACxCL,EAAMM,YAAYJ,GAClB,MAAMK,EAAUN,SAASE,cAAc,YACvCI,EAAQH,aAAa,WAAY,CAC/BI,UAAW,SACXC,OAAQ,IACRC,eAAgB,GAChBC,cAAe,KAEjBJ,EAAQH,aAAa,QAAS,UAC9BG,EAAQH,aAAa,WAAY,CAC/BQ,OAAQ,OACRC,MAAM,EACNC,KAAM,OACNC,IAAK,IAAMlD,KAAKE,iBAClBwC,EAAQH,aAAa,SAAU,CAC7BC,IAAK,OACLW,KAAM,SACRhB,EAAMM,YAAYC,GAClB,MAAMU,EAAWhB,SAASE,cAAc,YACxCc,EAASb,aAAa,WAAY,CAChCI,UAAW,SACXC,OAAQ,IACRC,eAAgB,GAChBC,cAAe,KAEjBM,EAASb,aAAa,QAAS,UAC/Ba,EAASb,aAAa,WAAY,CAChCQ,OAAQ,OACRC,MAAM,EACNC,KAAM,OACNC,IAAK,IAAMlD,KAAKE,iBAClBkD,EAASb,aAAa,SAAU,CAC9BC,IAAK,QACLW,KAAM,SACRhB,EAAMM,YAAYW,GAClBhB,SAASL,cAAc,WAAWsB,YAhGpCC,EAAA,CADCC,OAAAC,EAAA,EAAAD,CAAK,CAACE,QAAS,oEAiChBH,EAAA,CADCC,OAAAC,EAAA,EAAAD,CAAM,8IAjCY,ICRgHG,EDQhH9D,EAAiB0D,EAAA,CAFrCC,OAAAC,EAAA,EAAAD,CAAU,KAEU3D,WEDrB+D,EAAgBJ,OAAAK,EAAA,EAAAL,CACdG,EHRF,WAA0B,IAAaG,EAAb7D,KAAa8D,eAAkD,OAA/D9D,KAAuC+D,MAAAC,IAAAH,GAAwB,WAAqBI,MAAA,CAAOC,SAAA,GAAAC,aAAA,qBACrH,IGUA,EACA,KACA,KACA,MAIeC,EAAA,QAAAT","file":"syncydinkvr.chunk.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a-scene',{attrs:{\"embedded\":\"\",\"vr-mode-ui\":\"enabled: false\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from \"vue\";\nimport { Component, Model, Prop, Watch } from \"vue-property-decorator\";\nimport videojs from \"video.js\";\nimport \"aframe\";\nconst asc = require(\"aframe-stereo-component\");\n\n@Component({\n})\nexport default class AframeVideoPlayer extends Vue {\n  @Prop({default: null})\n  private currentPlayer: videojs.Player | null;\n  private vrControlButton: videojs.Component | null = null;\n  private videoElementId: string | null = null;\n\n  public mounted() {\n    if (!AFRAME.components.hasOwnProperty(\"stereo\")) {\n      AFRAME.registerComponent(\"stereo\", asc.stereo_component);\n      AFRAME.registerComponent(\"stereocam\", asc.stereocam_component);\n    }\n    const Button = videojs.getComponent(\"Button\");\n    const OnVRClick = () => {\n      this.RunVRMode();\n    };\n    const VRButton = (videojs as any).extend(videojs.getComponent(\"Button\"), {\n      // tslint:disable-next-line object-literal-shorthand\n      constructor: function() {\n        (Button as any).apply(this, arguments);\n        this.controlText(\"VR\");\n      },\n      // tslint:disable-next-line object-literal-shorthand\n      handleClick: function() {\n        OnVRClick();\n      },\n    });\n\n    videojs.registerComponent(\"vrButton\", VRButton);\n    if (this.currentPlayer) {\n      this.OnCurrentPlayerChange();\n    }\n  }\n\n  @Watch(\"currentPlayer\")\n  public OnCurrentPlayerChange() {\n    this.vrControlButton =\n      this.currentPlayer!\n      .getChild(\"controlBar\")!\n      .addChild(\"vrButton\", { id: \"vr-aframe-button\", text: \"VR\" }, 12);\n    this.vrControlButton.el().innerHTML = this.vrControlButton.el().innerHTML + \"<b>VR</b>\";\n\n    const videoElement = this.currentPlayer!.el().querySelector(\"video\");\n    if (videoElement === undefined || videoElement === null) {\n      console.log(\"Can't find video element for aframe setup?\");\n      return;\n    }\n    this.videoElementId = videoElement.id;\n  }\n\n  public beforeDestroy() {\n    this.currentPlayer!.getChild(\"controlBar\")!.removeChild(this.vrControlButton!);\n    this.vrControlButton = null;\n  }\n\n  private RunVRMode() {\n    const scene = document.querySelector(\"a-scene\");\n    const camera = document.createElement(\"a-camera\");\n    // Objects here need to be cast to any, otherwise typescript gets angry\n    // about not being able to discern their shape. So what was that anna was\n    // saying about these type systems being more trouble than they are\n    // help...\n    camera.setAttribute(\"position\", \"0 0 10\");\n    camera.setAttribute(\"stereocam\", { eye: \"left\" } as any);\n    scene.appendChild(camera);\n    const leftEye = document.createElement(\"a-entity\");\n    leftEye.setAttribute(\"geometry\", {\n      primitive: \"sphere\",\n      radius: 100,\n      segmentsHeight: 64,\n      segmentsWidth: 64,\n    } as any);\n    leftEye.setAttribute(\"scale\", \"-1 1 1\");\n    leftEye.setAttribute(\"material\", {\n      shader: \"flat\",\n      npot: true,\n      side: \"back\",\n      src: \"#\" + this.videoElementId} as any);\n    leftEye.setAttribute(\"stereo\", {\n      eye: \"left\",\n      mode: \"half\"} as any);\n    scene.appendChild(leftEye);\n    const rightEye = document.createElement(\"a-entity\");\n    rightEye.setAttribute(\"geometry\", {\n      primitive: \"sphere\",\n      radius: 100,\n      segmentsHeight: 64,\n      segmentsWidth: 64,\n    } as any);\n    rightEye.setAttribute(\"scale\", \"-1 1 1\");\n    rightEye.setAttribute(\"material\", {\n      shader: \"flat\",\n      npot: true,\n      side: \"back\",\n      src: \"#\" + this.videoElementId} as any);\n    rightEye.setAttribute(\"stereo\", {\n      eye: \"right\",\n      mode: \"half\"} as any);\n    scene.appendChild(rightEye);\n    document.querySelector(\"a-scene\").enterVR();\n  }\n}\n","import mod from \"-!../../../node_modules/ts-loader/index.js??ref--0!./AframeVideoPlayer.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/ts-loader/index.js??ref--0!./AframeVideoPlayer.ts?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AframeVideoPlayer.vue?vue&type=template&id=1d8dbe2f&\"\nimport script from \"./AframeVideoPlayer.ts?vue&type=script&lang=ts&\"\nexport * from \"./AframeVideoPlayer.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}